name: Arazzo Generator Docker build & push (AWS)

permissions:
  contents: read
  
on:
  push:
    branches: [ main ]
    paths:
      - 'generator/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'generator/**'

env:
  AWS_REGION: eu-west-1                     # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: arazzo-runner             # set this to your Amazon ECR repository name

jobs:
  build-push:
    # Runs for pushes and same-repo PRs, but never for forks or Dependabot
    if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set short git commit SHA
      id: get-short-sha
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./generator
        file: ./generator/docker/Dockerfile
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.COMMIT_SHORT_SHA }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Summary
      run: |
        echo "Docker image built: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.COMMIT_SHORT_SHA }}"
        echo "Use this image tag for deployment: ${{ env.COMMIT_SHORT_SHA }}"
