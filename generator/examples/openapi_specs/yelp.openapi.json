{
  "openapi": "3.0.0",
  "info": {
    "title": "Yelp Business Search and Reviews API",
    "description": "API for searching businesses, retrieving business details, and accessing business reviews. Provides endpoints to search businesses by terms, get specific business information by ID, and fetch reviews for individual businesses.",
    "version": "1.0.0",
    "contact": {
      "name": "Yelp",
      "url": "https://docs.developer.yelp.com/",
      "email": "email@example.com"
    },
    "license": {
      "name": "No License",
      "url": "http://example.com"
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/sophie-jentic/openapi-specs/refs/heads/main/yelp.com/openapi.json"
  },
  "servers": [
    {
      "url": "https://api.yelp.com/v3"
    }
  ],
  "paths": {
    "/businesses/search": {
      "get": {
        "summary": "Search Businesses",
        "description": "Returns a list of businesses based on the provided search criteria. Either `location` or both `latitude` and `longitude` are required.",
        "operationId": "getBusinessesSearch",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "Optional search term (e.g. 'food', 'restaurants').",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Required if latitude/longitude not provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Required if location not provided.",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -90,
              "maximum": 90
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Required if location not provided.",
            "schema": {
              "type": "number",
              "format": "float",
              "minimum": -180,
              "maximum": 180
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Optional. Search radius in meters (max 40000).",
            "schema": {
              "type": "integer",
              "maximum": 40000
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Optional. Comma-delimited list of category aliases.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Optional. Locale code.",
            "schema": {
              "type": "string",
              "default": "en_US"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. Number of results to return.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Optional. Result offset.",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Optional. Sort mode.",
            "schema": {
              "type": "string",
              "enum": [
                "best_match",
                "rating",
                "review_count",
                "distance"
              ],
              "default": "best_match"
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "Optional. Pricing levels.",
            "schema": {
              "type": "string",
              "pattern": "^[1-4](,[1-4])*$"
            }
          },
          {
            "name": "open_now",
            "in": "query",
            "description": "Optional. Return only open businesses.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "open_at",
            "in": "query",
            "description": "Optional. UNIX timestamp to filter for businesses open at that time.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Optional. Extra filters.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of businesses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessSearch"
                }
              }
            }
          }
        }
      }
    },
    "/businesses/search/phone": {
      "get": {
        "summary": "Phone Search",
        "description": "Search businesses by phone number.",
        "operationId": "getBusinessesSearchPhone",
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "Required. Phone number with country code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Businesses matching the phone number.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneSearch"
                }
              }
            }
          }
        }
      }
    },
    "/businesses/{id}": {
      "get": {
        "summary": "Business Details",
        "description": "Retrieve detailed business information.",
        "operationId": "getBusinessDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Yelp business ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed business content.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          }
        }
      }
    },
    "/businesses/insights": {
      "get": {
        "summary": "Business Insights",
        "description": "Returns Business Insights information for the provided businesses. This endpoint is part of Yelp Fusion Insights.",
        "operationId": "getBusinessInsights",
        "parameters": [
          {
            "name": "business_ids",
            "in": "query",
            "description": "Required. Comma-delimited list of Yelp business IDs to fetch insights for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business Insights response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/businesses/{business_id_or_alias}/insights/food_and_drinks": {
      "get": {
        "summary": "Food & Drinks Insights",
        "description": "Returns the list of food & drinks offered at the business, including trending items and raw ingredients. This endpoint is part of Yelp Fusion Insights.",
        "operationId": "getFoodAndDrinksInsights",
        "parameters": [
          {
            "name": "business_id_or_alias",
            "in": "path",
            "description": "Required. Yelp business ID or alias.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Food & Drinks Insights response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/delivery/search": {
      "get": {
        "summary": "Food Delivery Search",
        "description": "Returns businesses that support food delivery.",
        "operationId": "getDeliverySearch",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Required if latitude/longitude not provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Required if location not provided.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Required if location not provided.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Businesses supporting food delivery.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionSearch"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image_url": {
            "type": "string",
            "format": "uri"
          },
          "is_closed": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "review_count": {
            "type": "integer"
          },
          "rating": {
            "type": "number",
            "format": "float"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "phone": {
            "type": "string"
          },
          "display_phone": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "float",
            "description": "Meters from search center."
          }
        },
        "required": [
          "id",
          "name",
          "review_count",
          "rating"
        ]
      },
      "Coordinates": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "display_address": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BusinessSearch": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          },
          "region": {
            "type": "object",
            "properties": {
              "center": {
                "$ref": "#/components/schemas/Coordinates"
              }
            }
          }
        }
      },
      "PhoneSearch": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          }
        }
      },
      "TransactionSearch": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "text": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "time_created": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "profile_url": {
            "type": "string",
            "format": "uri"
          },
          "image_url": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}